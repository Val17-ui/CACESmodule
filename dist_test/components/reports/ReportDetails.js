import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Card from '../ui/Card';
import Badge from '../ui/Badge';
import { CheckCircle, XCircle, AlertTriangle, BarChart, UserCheck, Calendar } from 'lucide-react';
const ReportDetails = ({ session, participants }) => {
    const formatDate = (dateString) => {
        const date = new Date(dateString);
        return new Intl.DateTimeFormat('fr-FR', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        }).format(date);
    };
    // Calculate stats
    const passedCount = participants.filter(p => p.passed).length;
    const passRate = (passedCount / participants.length) * 100;
    const averageScore = participants.reduce((sum, p) => sum + (p.score || 0), 0) / participants.length;
    return (_jsxs("div", { children: [_jsx(Card, { title: "R\u00E9sum\u00E9 de la session", className: "mb-6", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: session.name }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center text-sm", children: [_jsx(Calendar, { size: 18, className: "text-gray-400 mr-2" }), _jsxs("span", { children: ["Date : ", formatDate(session.date)] })] }), _jsxs("div", { className: "flex items-center text-sm", children: [_jsx(Badge, { variant: "primary", className: "mr-2", children: session.referential }), _jsx("span", { children: "R\u00E9f\u00E9rentiel CACES" })] }), _jsxs("div", { className: "flex items-center text-sm", children: [_jsx(UserCheck, { size: 18, className: "text-gray-400 mr-2" }), _jsxs("span", { children: ["Participants : ", session.participantsCount] })] })] })] }), _jsxs("div", { className: "bg-gray-50 p-4 rounded-xl", children: [_jsx("h4", { className: "text-sm font-medium text-gray-700 mb-3", children: "Statistiques de la session" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Taux de r\u00E9ussite" }), _jsxs("p", { className: "text-2xl font-semibold text-gray-900", children: [passRate.toFixed(0), "%"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Score moyen" }), _jsxs("p", { className: "text-2xl font-semibold text-gray-900", children: [averageScore.toFixed(0), "/100"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Certifi\u00E9s" }), _jsxs("p", { className: "text-lg font-medium text-green-600", children: [passedCount, " / ", participants.length] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500", children: "Seuil de r\u00E9ussite" }), _jsx("p", { className: "text-lg font-medium text-gray-900", children: "70%" })] })] })] })] }) }), _jsx(Card, { title: "R\u00E9sultats par participant", className: "mb-6", children: _jsx("div", { className: "overflow-hidden", children: _jsxs("table", { className: "min-w-full divide-y divide-gray-200", children: [_jsx("thead", { className: "bg-gray-50", children: _jsxs("tr", { children: [_jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Participant" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Entreprise" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Score" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "\u00C9margement" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Statut" })] }) }), _jsx("tbody", { className: "bg-white divide-y divide-gray-200", children: participants.map((participant) => (_jsxs("tr", { className: "hover:bg-gray-50", children: [_jsxs("td", { className: "px-6 py-4 whitespace-nowrap", children: [_jsxs("div", { className: "text-sm font-medium text-gray-900", children: [participant.lastName, " ", participant.firstName] }), _jsx("div", { className: "text-sm text-gray-500", children: participant.email })] }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: participant.company }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: participant.score !== undefined ? (_jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: `w-8 h-8 rounded-full flex items-center justify-center mr-2 ${participant.passed ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`, children: participant.score }), _jsx("div", { className: "w-24 bg-gray-200 rounded-full h-2", children: _jsx("div", { className: `h-2 rounded-full ${participant.passed ? 'bg-green-600' : 'bg-red-600'}`, style: { width: `${participant.score}%` } }) })] })) : (_jsx("span", { children: "N/A" })) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: participant.hasSigned ? (_jsxs("span", { className: "text-green-600 flex items-center", children: [_jsx(CheckCircle, { size: 16, className: "mr-1" }), " Sign\u00E9"] })) : (_jsxs("span", { className: "text-red-600 flex items-center", children: [_jsx(XCircle, { size: 16, className: "mr-1" }), " Non sign\u00E9"] })) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: participant.passed !== undefined ? (participant.passed ? (_jsx(Badge, { variant: "success", children: "Certifi\u00E9" })) : (_jsx(Badge, { variant: "danger", children: "Ajourn\u00E9" }))) : (_jsx(Badge, { variant: "warning", children: "En attente" })) })] }, participant.id))) })] }) }) }), _jsxs(Card, { title: "Analyse des r\u00E9ponses", className: "mb-6", children: [_jsxs("div", { className: "flex items-center mb-4", children: [_jsx(BarChart, { size: 20, className: "text-gray-400 mr-2" }), _jsx("h3", { className: "text-lg font-medium text-gray-900", children: "Taux de r\u00E9ussite par question" })] }), _jsx("div", { className: "space-y-3", children: [...Array(5)].map((_, i) => {
                            const successRate = Math.floor(Math.random() * 40) + 60;
                            const isLow = successRate < 70;
                            return (_jsxs("div", { className: "flex items-center", children: [_jsxs("div", { className: "w-16 flex-shrink-0 text-sm text-gray-700", children: ["Q", i + 1] }), _jsx("div", { className: "flex-1 mx-2", children: _jsx("div", { className: "w-full bg-gray-200 rounded-full h-2.5", children: _jsx("div", { className: `h-2.5 rounded-full ${isLow ? 'bg-amber-500' : 'bg-blue-600'}`, style: { width: `${successRate}%` } }) }) }), _jsx("div", { className: "w-16 flex-shrink-0 text-right", children: _jsxs("span", { className: `text-sm font-medium ${isLow ? 'text-amber-600' : 'text-blue-600'}`, children: [successRate, "%"] }) }), isLow && (_jsx("div", { className: "w-6 flex-shrink-0 ml-2", children: _jsx(AlertTriangle, { size: 16, className: "text-amber-500" }) }))] }, i));
                        }) }), _jsx("div", { className: "mt-6 bg-blue-50 p-4 rounded-lg", children: _jsxs("p", { className: "text-sm text-blue-800", children: [_jsx("strong", { children: "Note d'analyse :" }), " Certaines questions ont un taux de r\u00E9ussite inf\u00E9rieur \u00E0 70%. Il est recommand\u00E9 de revoir ces points lors des prochaines formations."] }) })] })] }));
};
export default ReportDetails;
